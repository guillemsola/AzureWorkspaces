{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      },
      "defaultValue": "ws.local"
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS prefix for the public IP address used by the Load Balancer"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "https://raw.githubusercontent.com/guillemsola/AzureWorkspaces/master/AzureWorkspacesDeployment/Artifacts"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    },
    "_binariesLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Token to access installer binaries that has been given to you. Beware that token has a date of expiry."
      },
      "defaultValue": ""
    },
    "VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_F2",
        "Standard_F4",
        "Standard_A2",
        "Standard_A4",
        "Standard_D2_v2"
      ],
      "metadata": {
        "description": "The size that the virtual machines will use by default."
      },
      "defaultValue": "Standard_F2"
    }
  },
  "variables": {
    "NSGName": "WSVNET-NSG",
    "DCVMName": "DC-01",
    "WSFrontVMName": "WSFront",
    "WSBackVMName": "WSBack",
    "SQLVMName": "SQL",
    "WSLBackVMName": "WSLBack",
    "WSLFrontVMName": "WSLFront",
    "virtualNetworkName": "WSVNet",
    "virtualNetworkAddressRange": "10.0.0.0/8",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'wssa')]",
    "DCIPAddress": "10.0.0.4",
    "DCSubnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), '/subnets/', variables('DCSubnetName'))]",
    "DCSubnetName": "DCSubnet",
    "DCSubnetAddressPrefix": "10.0.0.0/24",
    "WSPpublicIPAddressName": "wspPublicIP",
    "OuPath": "OU=Servers,DC=ws,DC=local"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "tags": {
        "displayName": "Storage"
      },
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('WSPpublicIPAddressName')]",
      "apiVersion": "2016-03-30",
      "tags": {
        "displayName": "Portal Public IP"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2017-06-01",
      "tags": {
        "displayName": "WS-VNET"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('DCSubnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('DCSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('DCSubnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('DCVMName'), '-NIC')]",
      "apiVersion": "2016-03-30",
      "tags": {
        "displayName": "DC NIC"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('DCIPAddress')]",
              "subnet": {
                "id": "[variables('DCSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('DCVMName')]",
      "apiVersion": "2017-03-30",
      "tags": {
        "displayName": "Domain Controller VM"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('DCVMName'), '-NIC')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('DCVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": false
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('DCVMName'), '-os-disk')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('DCVMName'), '-data-disk')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "32",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('DCVMName'), '-NIC'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "CreateADForest",
          "apiVersion": "2015-06-15",
          "tags": {
            "displayName": "Create AD Forest"
          },
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('DCVMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/CreateADPDC.zip')]",
                "script": "CreateADPDC.ps1",
                "function": "CreateADPDC"
              },
              "configurationArguments": {
                "DomainName": "[parameters('domainName')]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "workspaceUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('WSPpublicIPAddressName')),'2016-03-30').dnsSettings.fqdn]"
    }
  }
}